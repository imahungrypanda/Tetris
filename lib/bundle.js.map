{"version":3,"sources":["webpack:///webpack/bootstrap 2ab9779abc75c05858a8","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/board.js","webpack:///./lib/pieces.js","webpack:///./lib/tetris.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACjFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;ACxFA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB,UAAU;AAC/B,uBAAuB,UAAU;AACjC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzmBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;;;;;;;;;;;AC/KA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ab9779abc75c05858a8","import Board from './board';\nimport Piece from './pieces';\n\n\nclass Game {\n  constructor(ctxMain, ctxPreview) {\n    this.board = new Board;\n    this.ctxMain = ctxMain;\n    this.ctxPreview = ctxPreview;\n    this.gameover = false;\n    this.spawnPiece();\n    this.insert();\n  }\n\n  move(){\n    this.drop();\n    this.insert();\n    if (this.over()) {\n      console.log(\"over\");\n      this.gameover = true;\n    }\n  }\n\n  draw(){\n      this.ctxMain.clearRect(0, 0, Game.WIDTH, Game.HEIGHT);\n      this.board.draw(this.ctxMain);\n      this.nextTetrmino.previewTetromino(this.ctxPreview);\n  }\n\n  spawnPiece(){\n    if (!this.nextTetrmino) {\n      this.currentTetrmino = Piece.randomPiece();\n    } else {\n      this.currentTetrmino = this.nextTetrmino;\n    }\n    this.nextTetrmino = Piece.randomPiece();\n  }\n\n  insert() {\n    this.board.update(this.currentTetrmino);\n  }\n\n  drop(){\n    // debugger\n    if (this.collision()) {\n      this.spawnPiece();\n    }\n    else {\n      this.board.remove(this.currentTetrmino);\n      this.currentTetrmino.drop();\n    }\n  }\n\n  collision() {\n    return this.board.collision(this.currentTetrmino);\n  }\n\n  over() {\n    return this.board.over(this.currentTetrmino);\n  }\n\n  moveLeft() {\n    if (!this.collision() && this.board.moveLeft(this.currentTetrmino)) {\n      this.board.remove(this.currentTetrmino);\n      this.currentTetrmino.moveLeft();\n      this.insert();\n    }\n  }\n\n  moveRight() {\n    if (!this.collision() && this.board.moveRight(this.currentTetrmino)) {\n      this.board.remove(this.currentTetrmino);\n      this.currentTetrmino.moveRight();\n      this.insert();\n    }\n  }\n}\n\nGame.WIDTH = 200;\nGame.HEIGHT = 400;\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","// import Game from './game';\n\nclass GameView {\n  constructor(game, ctx){\n    this.game = game;\n    this.ctx = ctx;\n    this.downPressed = false;\n    this.intervalSpeed = 600;\n    this.bindKeyHandlers();\n  }\n\n  bindKeyHandlers(){\n    document.addEventListener(\"keydown\", function(e) {\n      e.preventDefault();\n\n      switch(e.keyCode) {\n        // space bar\n        // case 32:\n        //   this.game.slam();\n        //   break;\n\n        // left arrow\n        case 37:\n          this.game.moveLeft();\n          break;\n\n        // up arrow\n        // case 38:\n        //   this.game.rotate();\n        //   break;\n\n        // right arrow\n        case 39:\n          this.game.moveRight();\n          break;\n\n        // down arrow\n        case 40:\n          if (!this.downPressed) {\n            clearInterval(this.interval);\n            this.interval = setInterval(() => {\n              this.game.move();\n            }, 40);\n            this.downPressed = true;\n          }\n          break;\n\n        default:\n          return;\n      }\n    }.bind(this));\n\n    document.addEventListener(\"keyup\", function(e) {\n      if (e.key === \"ArrowDown\") {\n        clearInterval(this.interval);\n        this.interval = setInterval(() => {\n          this.game.move();\n        }, 75);\n        this.downPressed = false;\n      }\n    }.bind(this));\n  }\n\n  start(){\n    this.interval = setInterval(() => {\n      this.game.move();\n    }, 75);\n\n    // this.request = window.requestAnimationFrame(this.animate.bind(this));\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n\n\n  animate(){\n    this.game.draw();\n\n    if (this.game.gameover) {\n      console.log(\"game over\");\n      clearInterval(this.interval);\n      // window.cancelAnimationFrame(this.request);\n    }\n\n    requestAnimationFrame(this.animate.bind(this));\n\n  }\n}\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 1\n// module chunks = 0","class Board {\n  constructor() {\n    this.grid = this.newGrid();\n  }\n\n  newGrid() {\n    let grid = [];\n\n    // rows\n    for (let i = 0; i < 20; i++) {\n      grid[i] = [];\n      // cols\n      for (let j = 0; j < 10; j++) {\n        grid[i][j] = null;\n      }\n    }\n\n    return grid;\n  }\n\n  draw(ctx) {\n    let padding = 20;\n\n    for (var row = 0; row < 20; row++) {\n      for (let col = 0; col < 10; col++) {\n        let x = col * padding;\n        let y = row * padding;\n\n\n        if (this.grid[row][col]) {\n          ctx.fillStyle = this.grid[row][col].color;\n          ctx.fillRect(x, y, padding,padding);\n        }\n        else {\n          ctx.clearRect(x, y, x + padding, y + padding);\n        }\n      }\n    }\n  }\n\n  pos(coords) {\n    let [x, y] = coords;\n    return this.grid[x][y];\n  }\n\n  update(piece) {\n    piece.coords.forEach(coords => {\n      let [x, y] = coords;\n      this.grid[x][y] = piece;\n    });\n  }\n\n  remove(piece) {\n    piece.coords.forEach(coords => {\n      let [x, y] = coords;\n      this.grid[x][y] = null;\n    });\n  }\n\n  collision(piece) {\n    for (let i = 0; i < piece.coords.length; i++) {\n      let coord = piece.coords[i];\n      let [x, y] = coord;\n      if (x === 19  ||\n         (!piece.coordsIncluded([x + 1, y]) &&\n          this.filled([x  + 1, y]))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  filled(coords) {\n    return this.pos(coords) !== null;\n  }\n\n  over(piece) {\n    let top = this.grid[0];\n    for (let i = 3; i < 7; i++) {\n      return top[i] === piece && this.collision(piece);\n    }\n  }\n\n  moveLeft(piece) {\n    for (let i = 0; i < piece.coords.length; i++) {\n      let [x, y] = piece.coords[i];\n      if ((y - 1 < 0) || (this.filled([x, y - 1]) && !piece.coordsIncluded([x, y - 1]))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  moveRight(piece) {\n    for (let i = 0; i < piece.coords.length; i++) {\n      let [x, y] = piece.coords[i];\n      if (y + 1 > 9  || (this.filled([x, y + 1]) && !piece.coordsIncluded([x, y + 1]))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","// all the tetrminos\nconst oPiece = {\n  color: \"yellow\",\n  coords: [[0, 4],[0, 5],[1, 4],[1, 5]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"yellow\";\n    ctx.fillRect(30, 30, 20, 20);\n    ctx.fillRect(30, 50, 20, 20);\n    ctx.fillRect(50, 30, 20, 20);\n    ctx.fillRect(50, 50, 20, 20);\n  }\n}\n\nconst sPiece = {\n  color: \"magenta\",\n  coords: [[0, 3],[0, 4],[1, 4],[1, 5]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"magenta\";\n    ctx.fillRect(40, 50, 20, 20);\n    ctx.fillRect(40, 30, 20, 20);\n    ctx.fillRect(20, 30, 20, 20);\n    ctx.fillRect(60, 50, 20, 20);\n  }\n}\n\nconst zPiece = {\n  color: \"green\",\n  coords: [[0, 4],[0, 5],[1, 3],[1, 4]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(40, 50, 20, 20);\n    ctx.fillRect(40, 30, 20, 20);\n    ctx.fillRect(20, 50, 20, 20);\n    ctx.fillRect(60, 30, 20, 20);\n  }\n}\n\nconst tPiece = {\n  color: \"black\",\n  coords: [[0, 4],[1, 3],[1, 4],[1, 5]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(40, 50, 20, 20);\n    ctx.fillRect(20, 50, 20, 20);\n    ctx.fillRect(60, 50, 20, 20);\n    ctx.fillRect(40, 30, 20, 20);\n  }\n}\n\nconst iPiece = {\n  color: \"red\",\n  coords: [[0, 4],[1, 4],[2, 4],[3, 4]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"red\";\n    ctx.fillRect(40, 30, 20, 20);\n    ctx.fillRect(40, 10, 20, 20);\n    ctx.fillRect(40, 50, 20, 20);\n    ctx.fillRect(40, 70, 20, 20);\n  }\n}\n\nconst lPiece = {\n  color: \"orange\",\n  coords: [[0, 4],[1, 4],[2, 4],[2, 5]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"orange\";\n    ctx.fillRect(30, 20, 20, 20);\n    ctx.fillRect(30, 40, 20, 20);\n    ctx.fillRect(30, 60, 20, 20);\n    ctx.fillRect(50, 60, 20, 20);\n  }\n}\n\nconst jPiece = {\n  color: \"blue\",\n  coords: [[0, 5],[1, 5],[2, 5],[2, 4]],\n  type: \"staticPiece\",\n  draw: ctx => {\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(50, 20, 20, 20);\n    ctx.fillRect(50, 40, 20, 20);\n    ctx.fillRect(50, 60, 20, 20);\n    ctx.fillRect(30, 60, 20, 20);\n  }\n}\n\nclass Piece {\n  constructor(options){\n    this.coords = options.coords;\n    this.color  = options.color;\n    this.draw   = options.draw;\n  }\n\n  previewTetromino(ctx) {\n    ctx.clearRect(0, 0, 100, 100);\n    this.draw(ctx);\n  }\n\n  drop() {\n    this.coords = this.coords.map(coord => {\n      let [x, y] = coord;\n      return [x + 1, y];\n    });\n  }\n\n  coordsIncluded(coord) {\n    for (let i = 0; i < this.coords.length; i++) {\n      let [oldx, oldy] = this.coords[i];\n      if (oldx === coord[0] && oldy === coord[1]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  moveLeft() {\n    this.coords = this.coords.map(coord => {\n      let [x, y] = coord;\n      // if (y - 1 > -1) {\n        return [x, y - 1];\n      // }\n      // return [x, y];\n    });\n  }\n\n  moveRight() {\n    this.coords = this.coords.map(coord => {\n      let [x, y] = coord;\n        return [x, y + 1];\n    });\n  }\n}\n\n\nexport default Piece;\n\nclass TogglePiece extends Piece {\n  constructor(options) {\n    super(options);\n  }\n}\n\nclass RotatePiece extends Piece {\n  constructor(options) {\n    super(options);\n  }\n}\n\nclass StaticPiece extends Piece {\n  constructor(options) {\n    super(options);\n  }\n}\n\n\n\n\nPiece.PIECES = [oPiece, sPiece, zPiece, tPiece, iPiece, lPiece, jPiece];\n\nPiece.randomPiece = () => {\n  let random = Math.floor(Math.random() * 7);\n  let options = Piece.PIECES[random];\n\n  switch (options.type) {\n    case \"staticPiece\":\n      return new StaticPiece(options);\n    default:\n      console.log(`No type ${options.type}`);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pieces.js\n// module id = 3\n// module chunks = 0","import Game from './game';\nimport GameView from './game_view';\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasMain = document.getElementById('canvas');\n  canvasMain.width = 200;\n  canvasMain.height = 400;\n  const ctxMain = canvasMain.getContext(\"2d\");\n\n  const canvasPreview = document.getElementById('next-tetrmino-render');\n  canvasPreview.width = 100;\n  canvasPreview.height = 100;\n  const ctxPreview = canvasPreview.getContext(\"2d\");\n\n  const game = new Game(ctxMain, ctxPreview);\n  // game.draw(ctx);\n  new GameView(game, ctxMain, ctxPreview).start();\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tetris.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}