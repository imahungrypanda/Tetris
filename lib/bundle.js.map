{"version":3,"sources":["webpack:///webpack/bootstrap 0d7d68e15b075653e045","webpack:///./lib/tetris.js","webpack:///./lib/game.js","webpack:///./lib/board.js","webpack:///./lib/pieces.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AChEA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;ACdD;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;AC9DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,UAAU;AAC/B,uBAAuB,UAAU;AACjC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;AAKA;;AAEA;;;;;;;;;AC/FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;AAKA;;;;;;;;AC/DA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d7d68e15b075653e045","import Game from './game';\nimport GameView from './game_view';\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById('canvas');\n  canvasEl.width = 200;\n  canvasEl.height = 400;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game(ctx);\n  // game.draw(ctx);\n  new GameView(game, ctx).start();\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tetris.js\n// module id = 0\n// module chunks = 0","import Board from './board';\nimport Piece from './pieces';\n\n\nclass Game {\n  constructor(ctx) {\n    this.board = new Board;\n    this.piece = new Piece;\n    this.currentTetrmino = this.spawnPiece();\n\n    this.insert();\n  }\n\n  move(){\n    this.drop();\n    this.insert();\n  }\n\n  draw(ctx){\n      ctx.clearRect(0, 0, Game.WIDTH, Game.HEIGHT);\n      this.board.draw(ctx);\n  }\n\n  spawnPiece(){\n    let random = Math.floor(Math.random() * 7);\n    let tetrmino = this.piece.PIECES[random];\n    return tetrmino\n  }\n\n  insert() {\n    this.board.update(this.currentTetrmino);\n  }\n\n  drop(){\n    debugger\n    if (this.collision(this.currentTetrmino)) {\n\n      this.board.remove(this.currentTetrmino);\n      this.piece.drop(this.currentTetrmino);\n    }\n    else {\n      this.currentTetrmino = this.spawnPiece();\n    }\n\n\n  }\n\n  collision(piece) {\n    return piece.coords.every(coord => {\n      let [x, y] = coord;\n      x++;\n      if (x < 20) {\n        return true;\n      }\n    });\n  }\n\n}\n\nGame.WIDTH = 200;\nGame.HEIGHT = 400;\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","// const imageObj = new Image();\n// imageObj.src = './lib/panda_logo.png';\n// const panda_logo = './lib/panda_logo.png';\n\nclass Board {\n  constructor() {\n    this.level = 0;\n    this.grid = this.newGrid();\n  }\n\n  newGrid() {\n    let grid = [];\n\n    // rows\n    for (let i = 0; i < 20; i++) {\n      grid[i] = [];\n      // cols\n      for (let j = 0; j < 10; j++) {\n        grid[i][j] = null;\n      }\n    }\n\n    return grid;\n  }\n\n  draw(ctx) {\n    let padding = 20;\n\n    // possible grid in the future?\n    // let width = 100;\n    // let height = 200;\n    // for (let x = padding; x <= width; x += padding) {\n    //   ctx.moveTo(0.5 + x, 0);\n    //   ctx.lineTo(0.5 + x, width);\n    //   this.grid[x];\n    //\n    // }\n    //\n    // for (let x = padding; x <= height; x += padding) {\n    //   ctx.moveTo(0, 0.5 + x);\n    //   ctx.lineTo(height, 0.5 + x);\n    // }\n    //\n    // ctx.strokeStyle = \"grey\";\n    // ctx.stroke();\n\n    // ctx.clip();\n\n    for (var row = 0; row < 20; row++) {\n      for (let col = 0; col < 10; col++) {\n        let x = col * padding;\n        let y = row * padding;\n\n\n        if (this.grid[row][col]) {\n          ctx.fillStyle = this.grid[row][col].color;\n          ctx.fillRect(x, y, padding,padding);\n          // let imageObj = new Image();\n          // imageObj.src = panda_logo;\n          // imageObj.onload = () => {\n          //   ctx.drawImage(imageObj, x, y, padding, padding);\n          // };\n        }\n        else {\n          // ctx.fillStyle = \"white\";\n          // ctx.fillRect(x, y, padding,padding);\n          ctx.clearRect(x, y, x + padding, y + padding);\n        }\n      }\n    }\n  }\n\n  pos(coords) {\n    let [x, y] = coords;\n    return this.grid[x][y];\n  }\n\n  update(piece) {\n    piece.coords.forEach(coords => {\n      let [x, y] = coords;\n      this.grid[x][y] = piece;\n    });\n  }\n\n  remove(piece) {\n    piece.coords.forEach(coords => {\n      let [x, y] = coords;\n      this.grid[x][y] = null;\n    });\n  }\n\n\n\n\n}\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","\nconst oPiece = {\n  color: \"yellow\",\n  coords: [[0, 4],[0, 5],[1, 4],[1, 5]]\n}\n\nconst sPiece = {\n  color: \"magenta\",\n  coords: [[0, 3],[0, 4],[1, 4],[1, 5]]\n}\n\nconst zPiece = {\n  color: \"green\",\n  coords: [[0, 4],[0, 5],[1, 3],[1, 4]]\n}\n\nconst tPiece = {\n  color: \"#0000FF\",\n  coords: [[0, 4],[1, 3],[1, 4],[1, 5]]\n}\n\nconst iPiece = {\n  color: \"red\",\n  coords: [[0, 4],[1, 4],[2, 4],[3, 4]]\n}\n\nconst lPiece = {\n  color: \"orange\",\n  coords: [[0, 4],[1, 4],[2, 4],[2, 5]]\n}\n\nconst jPiece = {\n  color: \"blue\",\n  coords: [[0, 5],[1, 5],[2, 5],[2, 4]]\n}\n\nclass Piece {\n  constructor(){\n    this.PIECES = [oPiece, sPiece, zPiece, tPiece, iPiece, lPiece, jPiece];\n  }\n\n  previewTetromino() {\n    const canvasEl = document.getElementById('next-tetrimino-render');\n    canvasEl.width = 75;\n    canvasEl.height = 75;\n    const ctx = canvasEl.getContext(\"2d\");\n  }\n\n  rotate(){}\n\n  toggle(){}\n\n  drop(piece) {\n    piece.coords = piece.coords.map(coord => {\n      let [x, y] = coord;\n      return [x + 1, y];\n    });\n  }\n}\n\n\n\n\nexport default Piece;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pieces.js\n// module id = 3\n// module chunks = 0","// import Game from './game';\n\nclass GameView {\n  constructor(game, ctx){\n    this.game = game;\n    this.ctx = ctx;\n  }\n\n  bindKeyHandlers(){}\n\n  start(){\n    setInterval(() => {\n      this.game.draw(this.ctx);\n      this.game.move();\n    }, 75);\n  }\n\n  animate(){}\n}\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}